
#include "Glcd12864.h"

int contadorx=0;
int contadory= 0;
float pot=0;
int pot2=0;
int potfinal = 30;
float conver = 0;
int cont_bpm=0;
int seg = 0;
int bmp2 =0;
int bandera = 0;



const unsigned char Imagen[1024]={ // Vector constante con imagen codificada
0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xF0,0xF0,0xF8,0x78,0x7C,0x7C,0x3C,0x3C,
0x3C,0x3C,0x3C,0x3C,0x7C,0x78,0xF8,0xF8,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xF0,0xF0,0xF8,0xF8,0x7C,
0x7C,0x3C,0x3C,0x3C,0x3C,0x3C,0x3C,0x7C,0x7C,0xF8,0xF8,0xF0,0xF0,0xE0,0xC0,0x80,
0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0xC0,0xC0,0xC0,0x80,0x00,0x00,0x00,0xC0,0xC0,
0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0x00,
0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0xC0,0xC0,
0x80,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0xC0,0xC0,0x80,0x00,0x00,0x00,0x00,
0x00,0x00,0xF0,0xFC,0xFF,0xFF,0x3F,0x07,0xE3,0xF9,0xFC,0xFE,0x3E,0x1F,0x0F,0x0F,
0x0F,0x0F,0x0F,0x1F,0x3F,0xFE,0xFC,0xFD,0x73,0x07,0x1F,0x3F,0x3F,0x3E,0x3E,0x1E,
0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x3E,0x3E,0x3F,0x3F,0x0F,0x43,0x71,0xFC,0xFE,0x7E,
0x3F,0x1F,0x0F,0x0F,0x0F,0x0F,0x0F,0x1F,0x3E,0xFE,0xFC,0xF9,0xE3,0x0F,0x7F,0xFF,
0xFF,0xFC,0x00,0xC7,0xCF,0xDF,0x9C,0x1C,0x3D,0xFB,0xFB,0xF3,0x00,0x00,0x00,0x00,
0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x07,0x7F,
0xF0,0xF0,0x7F,0x07,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC1,0xC3,0xC3,0x18,0x18,0xFF,
0xFF,0xE7,0x00,0x00,0x00,0x03,0x83,0xC3,0xE0,0x70,0x3F,0x1F,0x0F,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xF0,0xC0,0x9F,0x3F,0x7F,0xFF,0xF8,0x30,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0xF8,0xFF,0x7F,0x3F,0x8F,0xE0,0xF8,0xFF,
0xFF,0x7F,0x00,0x00,0x01,0x03,0x03,0x03,0xC3,0xC3,0x81,0x00,0x00,0xC0,0xC0,0x00,
0x00,0xC0,0xC3,0x03,0x03,0x00,0xC0,0xC0,0x00,0x00,0x00,0x83,0xC3,0xC3,0xC0,0xC0,
0x83,0x03,0x00,0xC0,0xC3,0x03,0x03,0x00,0x00,0x00,0xC0,0xC1,0xC3,0xC3,0xC3,0xC3,
0x01,0x00,0x00,0x80,0xC0,0xC3,0xC3,0x83,0x03,0x03,0x03,0x03,0x03,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xC1,0xFB,0xFF,0xFF,0x7F,0x1F,0x02,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x30,0x7C,0x7C,0x7C,0x78,0x80,0x80,0x80,0xC0,0xC0,0xC0,0xC0,
0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x80,0x80,0xB0,0x7C,0x7C,0x7C,0x78,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x1F,0xFF,0xFF,0xFF,0xF3,
0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x03,0x06,0x1C,0x3F,0x3F,0x00,
0x00,0x1F,0x3F,0x30,0x30,0x30,0x3F,0x1F,0x00,0x00,0x0F,0x1F,0x30,0x30,0x30,0x39,
0x19,0x00,0x00,0x3F,0x3F,0x30,0x30,0x30,0x00,0x00,0x3F,0x3F,0x36,0x36,0x36,0x36,
0x00,0x00,0x0F,0x1F,0x30,0x30,0x30,0x1F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,
0xE0,0xF0,0xF8,0xFC,0x7C,0x3E,0x1F,0x1F,0x0F,0x0F,0x87,0xE7,0xF7,0xFB,0xFB,0x7F,
0x7F,0x3F,0x3F,0x3F,0x7F,0x7B,0xFB,0xFF,0xF7,0xE7,0x07,0x0F,0x0F,0x1F,0x3E,0x7E,
0xFC,0xF8,0xF8,0xE0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x03,0x1F,0x7F,0xFF,0xFE,0xF0,0xC0,0x80,0x00,0x00,0x00,0xFF,
0xFF,0xFF,0xFF,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x0F,0x1F,0x1F,0x1E,
0xFE,0xFC,0xFC,0xFC,0x3E,0x1E,0x1F,0x1F,0x0F,0x07,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0xC1,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xE0,0xF8,0xFF,0xFF,0x7F,0x1F,
0x01,0x00,0x00,0x00,0x80,0xE0,0xF0,0xF0,0x78,0x38,0x38,0x38,0x78,0xF8,0xF0,0x70,
0x40,0x00,0x00,0x00,0xF8,0xF8,0xF8,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x80,0xE0,0xF0,0xF8,0x78,0x38,0x38,0x78,0xF8,0xF0,0x70,0x40,0x00,0x00,0x00,
0xF8,0xF8,0xF8,0xF8,0x38,0x38,0x38,0x78,0xF8,0xF0,0xE0,0x80,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x0F,0x1F,0x3F,0x7E,0xFC,0xF8,0xF0,
0xE3,0xE7,0xCF,0x9F,0xBF,0x3E,0x7C,0x78,0xF8,0xF0,0xF0,0xF0,0xE0,0xE0,0xE0,0xE0,
0xFF,0xFF,0xFF,0xFF,0xE0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0xF8,0xF8,0x7C,0x7C,0x3E,
0xBF,0x9F,0xCF,0xE7,0xF3,0xF0,0xF8,0xFC,0x7F,0x3F,0x1F,0x0F,0x03,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x1F,0x7F,0xFF,0xFF,0xE0,0xC0,0xC0,0xCE,0xEE,0xFE,0xFE,0xFE,
0x7E,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0x00,
0x00,0x1F,0x7F,0xFF,0xFF,0xE0,0xC0,0xC0,0xE0,0xF8,0xF8,0x70,0x30,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xC0,0xC0,0xC0,0xE0,0xFF,0xFF,0x7F,0x3F,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,
0x03,0x07,0x07,0x0F,0x0F,0x0F,0x1F,0x1E,0x3E,0x3E,0x3C,0x3D,0x3D,0x7D,0x79,0x79,
0x79,0x79,0x79,0x79,0x79,0x79,0x79,0x7D,0x3D,0x3D,0x3C,0x3E,0x1E,0x1E,0x1F,0x0F,
0x0F,0x0F,0x07,0x03,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

GLcd12864 L; // Declaración del objeto Lcd


//Coeficientes filtro de kalman

float q=1.0; //Ruido del proceso
float r=0.00565; // Ruido de la medición
float x_est =5 ; //estimación inicial
float p_est = 0.1; // incertidumbre inicial

void kalman(void) {
	
	//Predice el dato
	float x_pred = x_est;
	float p_pred= p_est+q;
	
	//Actualización dato
	float k= p_pred/(p_pred+r);
	float x_updated = x_pred +k*(conver-x_pred);
	float p_updated = (1-k) * p_pred;
	
	x_est=x_updated;
	p_est=p_updated;
}

 extern "C"{
	void SysTick_Handler(void){
		seg++;
		if(seg >= 15){
		 bandera = 1;
	   seg = 0;
		}else{bandera = 0;}
				
	}
}

int main(void){ // Función principal Main 
 // Inicia GLCD por los pines del puerto Arduino 
 L.IniciarGLCD(DP9,DP8,AP1,AP0,DP12,DP11,DP10,DP2,DP3,DP4,DP5,DP6,DP7); 
	
	RCC -> AHB1ENR |= 0X7;
	GPIOB-> MODER |= 0XC;     //0000 1100
	GPIOC-> MODER |= 0X30;     //0011 0000
	//CONFIGURAR ADC
	RCC -> APB2ENR |= (1UL<<14);
	RCC -> APB2ENR |= 0x100;				//Habilitar el ADC1
	GPIOB -> MODER|= 0XC; //0000 0000 1100
	
	ADC1->CR1|=0;
	ADC1->SQR3=9	;//activa canal 9 osea B1
	ADC1->CR2=0;//desactivar conversion T1
	Delay_ms(100);//esperar
	ADC1->CR2=1;//activa conversion
	
  SystemCoreClockUpdate();
	SysTick_Config(SystemCoreClock);
	 
	
 while(1){ // Bucle infinito 
	 L.PrintTexto(1,54,"BPM: ");
	 pot2 = potfinal;
	 ADC1->CR2|=0X40000000; //inicia conversion en canales regulares
		while((ADC1->SR &0X2)==1){asm("nop");}
		conver = ADC1 -> DR;
		kalman();
//		pot = ((x_est/4095.0)*50);
		pot = ((conver/4095.0)*50);
    if(pot>=40.0){ pot = pot+10;}
		potfinal = 50-pot;
	  contadorx+=2;contadory++;
		//Delay_ms(1);
		if(pot>39){cont_bpm++;}
		
		if(bandera ==1){
		  bmp2 = cont_bpm * 4;
			char unidad = ((bmp2*3)/10)+48;
		  char decena = ((bmp2*3)%10)+48;
			L.PrintChar(30,54,unidad);
			L.PrintChar(36,54,decena);
			Delay_ms(1000);
			cont_bpm = 0;
		}else{
			L.PrintChar(30,54,' ');
			L.PrintChar(36,54,' ');
		}
	  L.Linea(contadorx-2,pot2+5,contadorx,potfinal+5);
		//L.LineaP(contadorx-2,pot2+5,contadorx,potfinal+5,0);
	L.Refrescar();L.PrintChar(2,54,' ');// Refresca pantalla
	 if(contadorx>126){L.BorrarPantalla();contadorx=0;}
	 
	 
	 
 }
 return 0;
}


