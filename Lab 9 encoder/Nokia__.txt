#ifndef _FONT_TEXTO_H
#define _FONT_TEXTO_H

#include "stm32f4xx.h" 


//LETRAS 3X5
const unsigned char Lcd3x5[] = {
         0x00, 0x00, 0x00,                  // Code for char      0 - 2
         0x00, 0x17, 0x00,                  // Code for char !    3 - 5
         0x07, 0x00, 0x07,                  // Code for char "    6 - 8
         0x1F, 0x0A, 0x1F,                  // Code for char #    
         0x17, 0x1F, 0x1D,                  // Code for char $
         0x09, 0x04, 0x12,                  // Code for char %
         0x0E, 0x1B, 0x0A,                  // Code for char &
         0x03, 0x00, 0x00,                  // Code for char '
         0x0E, 0x11, 0x00,                  // Code for char (
         0x00, 0x11, 0x0E,                  // Code for char )
         0x04, 0x0A, 0x04,                  // Code for char *
         0x04, 0x0E, 0x04,                  // Code for char +
         0x10, 0x08, 0x00,                  // Code for char ,
         0x04, 0x04, 0x04,                  // Code for char -
         0x10, 0x00, 0x00,                  // Code for char .
         0x08, 0x04, 0x02,                  // Code for char /
         0x1F, 0x11, 0x1F,                  // Code for char 0
         0x12, 0x1F, 0x10,                  // Code for char 1
         0x1D, 0x15, 0x17,                  // Code for char 2
         0x15, 0x15, 0x1F,                  // Code for char 3
         0x07, 0x04, 0x1F,                  // Code for char 4
         0x17, 0x15, 0x1D,                  // Code for char 5
         0x1F, 0x15, 0x1D,                  // Code for char 6
         0x01, 0x01, 0x1F,                  // Code for char 7
         0x1F, 0x15, 0x1F,                  // Code for char 8
         0x17, 0x15, 0x1F,                  // Code for char 9
         0x00, 0x0A, 0x00,                  // Code for char :
         0x10, 0x0A, 0x00,                  // Code for char ;
         0x04, 0x0A, 0x11,                  // Code for char <
         0x0A, 0x0A, 0x0A,                  // Code for char =
         0x11, 0x0A, 0x04,                  // Code for char >
         0x01, 0x15, 0x07,                  // Code for char ?
         0x1F, 0x11, 0x17,                  // Code for char @
         0x1F, 0x05, 0x1F,                  // Code for char A
         0x1F, 0x15, 0x1B,                  // Code for char B
         0x1F, 0x11, 0x11,                  // Code for char C
         0x1F, 0x11, 0x0E,                  // Code for char D
         0x1F, 0x15, 0x15,                  // Code for char E
         0x1F, 0x05, 0x05,                  // Code for char F
         0x1F, 0x11, 0x1D,                  // Code for char G
         0x1F, 0x04, 0x1F,                  // Code for char H
         0x1, 0x1F, 0x1,                  // Code for char I
         0x18, 0x10, 0x1F,                  // Code for char J
         0x1F, 0x04, 0x1B,                  // Code for char K
         0x1F, 0x10, 0x10,                  // Code for char L
         0x1F, 0x02, 0x1F,                  // Code for char M
         0x1F, 0x01, 0x1F,                  // Code for char N
         0x1F, 0x11, 0x1F,                  // Code for char O
         0x1F, 0x05, 0x07,                  // Code for char P
         0x0F, 0x19, 0x0F,                  // Code for char Q
         0x1F, 0x05, 0x1B,                  // Code for char R
         0x17, 0x15, 0x1D,                  // Code for char S
         0x01, 0x1F, 0x01,                  // Code for char T
         0x1F, 0x10, 0x1F,                  // Code for char U
         0x0F, 0x10, 0x0F,                  // Code for char V
         0x1F, 0x08, 0x1F,                  // Code for char W
         0x1B, 0x04, 0x1B,                  // Code for char X
         0x07, 0x1C, 0x07,                  // Code for char Y
         0x19, 0x15, 0x13,                  // Code for char Z
         0x1F, 0x11, 0x00,                  // Code for char [
         0x02, 0x04, 0x08,                  // Code for char BackSlash
         0x00, 0x11, 0x1F,                  // Code for char ]
         0x02, 0x01, 0x02,                  // Code for char ^
         0x10, 0x10, 0x10,                  // Code for char _
         0x00, 0x01, 0x02,                  // Code for char `
         0x1F, 0x05, 0x1F,                  // Code for char A
         0x1F, 0x15, 0x1B,                  // Code for char B
         0x1F, 0x11, 0x11,                  // Code for char C
         0x1F, 0x11, 0x0E,                  // Code for char D
         0x1F, 0x15, 0x15,                  // Code for char E
         0x1F, 0x05, 0x05,                  // Code for char F
         0x1F, 0x11, 0x1D,                  // Code for char G
         0x1F, 0x04, 0x1F,                  // Code for char H
         0x01, 0x1F, 0x01,                  // Code for char I
         0x18, 0x10, 0x1F,                  // Code for char J
         0x1F, 0x04, 0x1B,                  // Code for char K
         0x1F, 0x10, 0x10,                  // Code for char L
         0x1F, 0x02, 0x1F,                  // Code for char M
         0x1F, 0x01, 0x1F,                  // Code for char N
         0x1F, 0x11, 0x1F,                  // Code for char O
         0x1F, 0x05, 0x07,                  // Code for char P
         0x0F, 0x19, 0x0F,                  // Code for char Q
         0x1F, 0x05, 0x1B,                  // Code for char R
         0x17, 0x15, 0x1D,                  // Code for char S
         0x01, 0x1F, 0x01,                  // Code for char T
         0x1F, 0x10, 0x1F,                  // Code for char U
         0x0F, 0x10, 0x0F,                  // Code for char V
         0x1F, 0x08, 0x1F,                  // Code for char W
         0x1B, 0x04, 0x1B,                  // Code for char X
         0x07, 0x1C, 0x07,                  // Code for char Y
         0x19, 0x15, 0x13,                  // Code for char Z
         0x04, 0x1B, 0x11,                  // Code for char {
         0x00, 0x1F, 0x00,                  // Code for char |
         0x11, 0x1B, 0x04,                  // Code for char }
         0x00, 0x00, 0x00,                  // Code for char ~
         0x1E, 0x02, 0x1E                   // Code for char 
        };	


				


//LETRAS 5X7				
const unsigned char Lcd5x7[] = {
         0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char  
         0x00, 0x00, 0x4F, 0x00, 0x00,      // Code for char !
         0x00, 0x07, 0x00, 0x07, 0x00,      // Code for char "
         0x14, 0x7F, 0x14, 0x7F, 0x14,      // Code for char #
         0x24, 0x2A, 0x7F, 0x2A, 0x12,      // Code for char $
         0x23, 0x13, 0x08, 0x64, 0x62,      // Code for char %
         0x36, 0x49, 0x56, 0x20, 0x58,      // Code for char &
         0x00, 0x05, 0x03, 0x00, 0x00,      // Code for char '
         0x00, 0x1C, 0x22, 0x41, 0x00,      // Code for char (
         0x00, 0x41, 0x22, 0x1C, 0x00,      // Code for char )
         0x22, 0x14, 0x7F, 0x14, 0x22,      // Code for char *
         0x08, 0x08, 0x3E, 0x08, 0x08,      // Code for char +
         0x00, 0x00, 0x50, 0x30, 0x00,      // Code for char ,
         0x08, 0x08, 0x08, 0x08, 0x08,      // Code for char -
         0x00, 0x60, 0x60, 0x00, 0x00,      // Code for char .
         0x20, 0x10, 0x08, 0x04, 0x02,      // Code for char /
         0x3E, 0x51, 0x49, 0x45, 0x3E,      // Code for char 0
         0x00, 0x42, 0x7F, 0x40, 0x00,      // Code for char 1
         0x42, 0x61, 0x51, 0x49, 0x46,      // Code for char 2
         0x21, 0x41, 0x45, 0x4B, 0x31,      // Code for char 3
         0x18, 0x14, 0x12, 0x7F, 0x10,      // Code for char 4
         0x27, 0x45, 0x45, 0x45, 0x39,      // Code for char 5
         0x3C, 0x4A, 0x49, 0x49, 0x30,      // Code for char 6
         0x01, 0x01, 0x71, 0x0D, 0x03,      // Code for char 7
         0x36, 0x49, 0x49, 0x49, 0x36,      // Code for char 8
         0x06, 0x49, 0x49, 0x29, 0x1E,      // Code for char 9
         0x00, 0x6C, 0x6C, 0x00, 0x00,      // Code for char :
         0x00, 0x56, 0x36, 0x00, 0x00,      // Code for char ;
         0x08, 0x14, 0x22, 0x41, 0x00,      // Code for char <
         0x14, 0x14, 0x14, 0x14, 0x14,      // Code for char =
         0x00, 0x41, 0x22, 0x14, 0x08,      // Code for char >
         0x02, 0x01, 0x51, 0x09, 0x06,      // Code for char ?
         0x3E, 0x41, 0x5D, 0x55, 0x1E,      // Code for char @
         0x7C, 0x12, 0x11, 0x12, 0x7C,      // Code for char A
         0x7F, 0x49, 0x49, 0x49, 0x36,      // Code for char B
         0x3E, 0x41, 0x41, 0x41, 0x22,      // Code for char C
         0x7F, 0x41, 0x41, 0x22, 0x1C,      // Code for char D
         0x7F, 0x49, 0x49, 0x49, 0x41,      // Code for char E
         0x7F, 0x09, 0x09, 0x09, 0x01,      // Code for char F
         0x3E, 0x41, 0x49, 0x49, 0x7A,      // Code for char G
         0x7F, 0x08, 0x08, 0x08, 0x7F,      // Code for char H
         0x00, 0x41, 0x7F, 0x41, 0x00,      // Code for char I
         0x20, 0x40, 0x41, 0x3F, 0x01,      // Code for char J
         0x7F, 0x08, 0x14, 0x22, 0x41,      // Code for char K
         0x7F, 0x40, 0x40, 0x40, 0x40,      // Code for char L
         0x7F, 0x02, 0x0C, 0x02, 0x7F,      // Code for char M
         0x7F, 0x04, 0x08, 0x10, 0x7F,      // Code for char N
         0x3E, 0x41, 0x41, 0x41, 0x3E,      // Code for char O
         0x7F, 0x09, 0x09, 0x09, 0x06,      // Code for char P
         0x3E, 0x41, 0x51, 0x21, 0x5E,      // Code for char Q
         0x7F, 0x09, 0x19, 0x29, 0x46,      // Code for char R
         0x26, 0x49, 0x49, 0x49, 0x32,      // Code for char S
         0x01, 0x01, 0x7F, 0x01, 0x01,      // Code for char T
         0x3F, 0x40, 0x40, 0x40, 0x3F,      // Code for char U
         0x1F, 0x20, 0x40, 0x20, 0x1F,      // Code for char V
         0x3F, 0x40, 0x38, 0x40, 0x3F,      // Code for char W
         0x63, 0x14, 0x08, 0x14, 0x63,      // Code for char X
         0x03, 0x04, 0x78, 0x04, 0x03,      // Code for char Y
         0x61, 0x51, 0x49, 0x45, 0x43,      // Code for char Z
         0x00, 0x7F, 0x41, 0x41, 0x00,      // Code for char [
         0x02, 0x04, 0x08, 0x10, 0x20,      // Code for char BackSlash
         0x00, 0x41, 0x41, 0x7F, 0x00,      // Code for char ]
         0x04, 0x02, 0x01, 0x02, 0x04,      // Code for char ^
         0x40, 0x40, 0x40, 0x40, 0x40,      // Code for char _
         0x00, 0x00, 0x03, 0x05, 0x00,      // Code for char `
         0x20, 0x54, 0x54, 0x54, 0x78,      // Code for char a
         0x7F, 0x48, 0x44, 0x44, 0x38,      // Code for char b
         0x38, 0x44, 0x44, 0x44, 0x44,      // Code for char c
         0x38, 0x44, 0x44, 0x48, 0x7F,      // Code for char d
         0x38, 0x54, 0x54, 0x54, 0x18,      // Code for char e
         0x04, 0x04, 0x7E, 0x05, 0x05,      // Code for char f
         0x08, 0x54, 0x54, 0x54, 0x3C,      // Code for char g
         0x7F, 0x08, 0x04, 0x04, 0x78,      // Code for char h
         0x00, 0x44, 0x7D, 0x40, 0x00,      // Code for char i
         0x20, 0x40, 0x44, 0x3D, 0x00,      // Code for char j
         0x00, 0x7F, 0x10, 0x28, 0x44,      // Code for char k
         0x00, 0x41, 0x7F, 0x40, 0x00,      // Code for char l
         0x7C, 0x04, 0x78, 0x04, 0x78,      // Code for char m
         0x7C, 0x08, 0x04, 0x04, 0x78,      // Code for char n
         0x38, 0x44, 0x44, 0x44, 0x38,      // Code for char o
         0x7C, 0x14, 0x14, 0x14, 0x08,      // Code for char p
         0x08, 0x14, 0x14, 0x14, 0x7C,      // Code for char q
         0x00, 0x7C, 0x08, 0x04, 0x04,      // Code for char r
         0x48, 0x54, 0x54, 0x54, 0x20,      // Code for char s
         0x04, 0x04, 0x3F, 0x44, 0x44,      // Code for char t
         0x3C, 0x40, 0x40, 0x20, 0x7C,      // Code for char u
         0x1C, 0x20, 0x40, 0x20, 0x1C,      // Code for char v
         0x3C, 0x40, 0x30, 0x40, 0x3C,      // Code for char w
         0x44, 0x28, 0x10, 0x28, 0x44,      // Code for char x
         0x0C, 0x50, 0x50, 0x50, 0x3C,      // Code for char y
         0x44, 0x64, 0x54, 0x4C, 0x44,      // Code for char z
         0x00, 0x08, 0x36, 0x41, 0x41,      // Code for char {
         0x00, 0x00, 0x7F, 0x00, 0x00,      // Code for char |
         0x41, 0x41, 0x36, 0x08, 0x00,      // Code for char }
         0x02, 0x01, 0x02, 0x04, 0x02,      // Code for char ~
         0x60, 0x58, 0x46, 0x58, 0x60       // Code for char 
        };


//LETRAS 6 X 8
const unsigned char Terminal6x8[] = { 
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char  
         0x00, 0x00, 0x06, 0x5F, 0x06, 0x00,  // Code for char !
         0x00, 0x07, 0x03, 0x00, 0x07, 0x03,  // Code for char "
         0x00, 0x24, 0x7E, 0x24, 0x7E, 0x24,  // Code for char #
         0x00, 0x24, 0x2B, 0x6A, 0x12, 0x00,  // Code for char $
         0x00, 0x63, 0x13, 0x08, 0x64, 0x63,  // Code for char %
         0x00, 0x36, 0x49, 0x56, 0x20, 0x50,  // Code for char &
         0x00, 0x00, 0x07, 0x03, 0x00, 0x00,  // Code for char '
         0x00, 0x00, 0x3E, 0x41, 0x00, 0x00,  // Code for char (
         0x00, 0x00, 0x41, 0x3E, 0x00, 0x00,  // Code for char )
         0x00, 0x08, 0x3E, 0x1C, 0x3E, 0x08,  // Code for char *
         0x00, 0x08, 0x08, 0x3E, 0x08, 0x08,  // Code for char +
         0x00, 0x00, 0xE0, 0x60, 0x00, 0x00,  // Code for char ,
         0x00, 0x08, 0x08, 0x08, 0x08, 0x08,  // Code for char -
         0x00, 0x00, 0x60, 0x60, 0x00, 0x00,  // Code for char .
         0x00, 0x20, 0x10, 0x08, 0x04, 0x02,  // Code for char /
         0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E,  // Code for char 0
         0x00, 0x00, 0x42, 0x7F, 0x40, 0x00,  // Code for char 1
         0x00, 0x62, 0x51, 0x49, 0x49, 0x46,  // Code for char 2
         0x00, 0x22, 0x49, 0x49, 0x49, 0x36,  // Code for char 3
         0x00, 0x18, 0x14, 0x12, 0x7F, 0x10,  // Code for char 4
         0x00, 0x2F, 0x49, 0x49, 0x49, 0x31,  // Code for char 5
         0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30,  // Code for char 6
         0x00, 0x01, 0x71, 0x09, 0x05, 0x03,  // Code for char 7
         0x00, 0x36, 0x49, 0x49, 0x49, 0x36,  // Code for char 8
         0x00, 0x06, 0x49, 0x49, 0x29, 0x1E,  // Code for char 9
         0x00, 0x00, 0x6C, 0x6C, 0x00, 0x00,  // Code for char :
         0x00, 0x00, 0xEC, 0x6C, 0x00, 0x00,  // Code for char ;
         0x00, 0x08, 0x14, 0x22, 0x41, 0x00,  // Code for char <
         0x00, 0x24, 0x24, 0x24, 0x24, 0x24,  // Code for char =
         0x00, 0x00, 0x41, 0x22, 0x14, 0x08,  // Code for char >
         0x00, 0x02, 0x01, 0x59, 0x09, 0x06,  // Code for char ?
         0x00, 0x3E, 0x41, 0x5D, 0x55, 0x1E,  // Code for char @
         0x00, 0x7E, 0x11, 0x11, 0x11, 0x7E,  // Code for char A
         0x00, 0x7F, 0x49, 0x49, 0x49, 0x36,  // Code for char B
         0x00, 0x3E, 0x41, 0x41, 0x41, 0x22,  // Code for char C
         0x00, 0x7F, 0x41, 0x41, 0x41, 0x3E,  // Code for char D
         0x00, 0x7F, 0x49, 0x49, 0x49, 0x41,  // Code for char E
         0x00, 0x7F, 0x09, 0x09, 0x09, 0x01,  // Code for char F
         0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A,  // Code for char G
         0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F,  // Code for char H
         0x00, 0x00, 0x41, 0x7F, 0x41, 0x00,  // Code for char I
         0x00, 0x30, 0x40, 0x40, 0x40, 0x3F,  // Code for char J
         0x00, 0x7F, 0x08, 0x14, 0x22, 0x41,  // Code for char K
         0x00, 0x7F, 0x40, 0x40, 0x40, 0x40,  // Code for char L
         0x00, 0x7F, 0x02, 0x04, 0x02, 0x7F,  // Code for char M
         0x00, 0x7F, 0x02, 0x04, 0x08, 0x7F,  // Code for char N
         0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E,  // Code for char O
         0x00, 0x7F, 0x09, 0x09, 0x09, 0x06,  // Code for char P
         0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E,  // Code for char Q
         0x00, 0x7F, 0x09, 0x09, 0x19, 0x66,  // Code for char R
         0x00, 0x26, 0x49, 0x49, 0x49, 0x32,  // Code for char S
         0x00, 0x01, 0x01, 0x7F, 0x01, 0x01,  // Code for char T
         0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F,  // Code for char U
         0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F,  // Code for char V
         0x00, 0x3F, 0x40, 0x3C, 0x40, 0x3F,  // Code for char W
         0x00, 0x63, 0x14, 0x08, 0x14, 0x63,  // Code for char X
         0x00, 0x07, 0x08, 0x70, 0x08, 0x07,  // Code for char Y
         0x00, 0x71, 0x49, 0x45, 0x43, 0x00,  // Code for char Z
         0x00, 0x00, 0x7F, 0x41, 0x41, 0x00,  // Code for char [
         0x00, 0x02, 0x04, 0x08, 0x10, 0x20,  // Code for char BackSlash
         0x00, 0x00, 0x41, 0x41, 0x7F, 0x00,  // Code for char ]
         0x00, 0x04, 0x02, 0x01, 0x02, 0x04,  // Code for char ^
         0x80, 0x80, 0x80, 0x80, 0x80, 0x80,  // Code for char _
         0x00, 0x00, 0x03, 0x07, 0x00, 0x00,  // Code for char `
         0x00, 0x20, 0x54, 0x54, 0x54, 0x78,  // Code for char a
         0x00, 0x7F, 0x44, 0x44, 0x44, 0x38,  // Code for char b
         0x00, 0x38, 0x44, 0x44, 0x44, 0x28,  // Code for char c
         0x00, 0x38, 0x44, 0x44, 0x44, 0x7F,  // Code for char d
         0x00, 0x38, 0x54, 0x54, 0x54, 0x08,  // Code for char e
         0x00, 0x08, 0x7E, 0x09, 0x09, 0x00,  // Code for char f
         0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C,  // Code for char g
         0x00, 0x7F, 0x04, 0x04, 0x78, 0x00,  // Code for char h
         0x00, 0x00, 0x00, 0x7D, 0x40, 0x00,  // Code for char i
         0x00, 0x40, 0x80, 0x84, 0x7D, 0x00,  // Code for char j
         0x00, 0x7F, 0x10, 0x28, 0x44, 0x00,  // Code for char k
         0x00, 0x00, 0x00, 0x7F, 0x40, 0x00,  // Code for char l
         0x00, 0x7C, 0x04, 0x18, 0x04, 0x78,  // Code for char m
         0x00, 0x7C, 0x04, 0x04, 0x78, 0x00,  // Code for char n
         0x00, 0x38, 0x44, 0x44, 0x44, 0x38,  // Code for char o
         0x00, 0xFC, 0x44, 0x44, 0x44, 0x38,  // Code for char p
         0x00, 0x38, 0x44, 0x44, 0x44, 0xFC,  // Code for char q
         0x00, 0x44, 0x78, 0x44, 0x04, 0x08,  // Code for char r
         0x00, 0x08, 0x54, 0x54, 0x54, 0x20,  // Code for char s
         0x00, 0x04, 0x3E, 0x44, 0x24, 0x00,  // Code for char t
         0x00, 0x3C, 0x40, 0x20, 0x7C, 0x00,  // Code for char u
         0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C,  // Code for char v
         0x00, 0x3C, 0x60, 0x30, 0x60, 0x3C,  // Code for char w
         0x00, 0x6C, 0x10, 0x10, 0x6C, 0x00,  // Code for char x
         0x00, 0x9C, 0xA0, 0x60, 0x3C, 0x00,  // Code for char y
         0x00, 0x64, 0x54, 0x54, 0x4C, 0x00,  // Code for char z
         0x00, 0x08, 0x3E, 0x41, 0x41, 0x00,  // Code for char {
         0x00, 0x00, 0x00, 0x77, 0x00, 0x00,  // Code for char |
         0x00, 0x00, 0x41, 0x41, 0x3E, 0x08,  // Code for char }
         0x00, 0x02, 0x01, 0x02, 0x01, 0x00,  // Code for char ~
         0x00, 0x3C, 0x26, 0x23, 0x26, 0x3C   // Code for char 
        };




const unsigned char Imagen[504]={ // Mapa de bits
 0, 254,   2,   2,   2, 130,   2,   2, 130, 130, 130,   2, 
130, 130, 130,   2,   2,   2,   2,   2,   2,   2,   2,   2, 
130, 130,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2, 
  2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,   2, 
  2,   2,   2,   2,   2,   2,   2,   2, 130, 130,   2,   2, 
  2,   2,   2,   2,   2,   2,   2,   2,   2,   2, 194,  66, 
 66,  66,  66,  66,  66,  66,  66, 194,   2,   2, 254,   0, 
  0, 255,   0,   0,   0,  15,   8,   0,  15,   2,  15,   0, 
 15,  10,  15,   0,   0,   0,   0,   0,   0,   0, 254, 254, 
  1,   1,   6,   6,   6,   6,  24,  24,  24,  16, 112,  96, 
128, 128,   0,   0,   0,   0,   0,   0, 128, 128,  96,  96, 
 24,  24,  24,  24,   6,   6,   6,   6,   1,   1, 254, 254, 
  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 255, 170, 
170, 128, 128,   0, 224,   0,   0, 255,   0,   0, 255,   0, 
  0, 255,   0,   0,   0,   0,   0,   0,   2, 194,  50,  14, 
  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   7, 255, 
248,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
  1,   1,   6,   6,  24,  24,   6,   6,   1,   1,   0,   0, 
  0,   0,   0,   0,   0,   0,   0,   0,   0, 248, 255,   7, 
  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 255, 170, 
170, 128, 128,  64,  67, 192,   0, 255,   0,   0, 255,   0, 
  0, 255,   0, 184, 232,   0, 248, 168,   0, 248,  16, 248, 
  0, 184, 232,   0, 248, 248,   0, 248,   8,   0,   0,   1, 
  1,   6,   6, 152, 152,  96,  96,   0,   0,   0,   0,   0, 
  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 
  0,   0,   0,  96,  96, 152, 152,   6,   6,   1,   1,   0, 
  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 255, 170, 
170, 128, 128,  71,  69, 197,   0, 255,   0,   0, 255,   0, 
  0, 255,   0, 124, 124,   0, 124,  12,   0, 124,  72,   0, 
124,   0, 124,  68,   0, 124, 124,   0,   0,   0,   0,   0, 
  0,   0,   0, 255, 255,   0,   0,   0,   0, 128, 128, 128, 
128, 128, 128, 128, 126, 126, 128, 128, 128, 128, 128, 128, 
128,   0,   0,   0,   0, 255, 255,   0,   0,   0,   0,   0, 
  0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 255, 170, 
170, 128, 128,   4,   5,   7,   0, 255,   0,   0, 255,   0, 
  0, 127,  64,  64,  64,  64,  64,  64,  64,  64,  64,  64, 
 64,  64,  64,  64,  64,  64,  64,  64,  64,  64,  64,  64, 
 64,  64,  64,  65,  65,  70,  78,  78,  70,  65,  65,  65, 
 65,  65,  65,  65,  64,  64,  65,  65,  65,  65,  65,  65, 
 65,  70,  78,  78,  70,  65,  65,  64,  64,  64,  64,  64, 
 64,  64,  64,  64,  64,  64,  64,  64,  64,  64,  71,  68, 
 68,  68,  68,  68,  68,  68,  68,  71,  64,  64, 127,   0



};  



int clearscreen = 0x08;   //00001000
int videoinvertido = 0x0D;//00001101
int modonormal = 0x0C ;   //00001100
int Yaddress = 0x40;
int Xaddress = 0x80;
int i = 0;
int grados = 0;
int grados1 = 0;
int valor= 0;
			
				
				
				
				
void Delay(int x){
	for(volatile int i=0;i<x*700; i++){
		asm("nop"); 
	}
}



//ENVIAR COMANDO	
void send_comand_nokia(int a){
	GPIOA -> ODR &= ~(1UL<<4); //DC = 0
	Delay(2);
	GPIOA -> ODR &= ~(1UL<<0); //CE = 0
	Delay(2);
	SPI1->DR= a;
	Delay(2);
	while(!(SPI1->SR&SPI_SR_TXE)){}; // Espera fin de la transmisión
  while(SPI1->SR&SPI_SR_BSY); // Espera puerto disponible
}

//ENVIAR DATO
void send_data_nokia(int a){
	GPIOA -> ODR |= (1UL<<4); //DC = 1
	SPI1->DR = a;
	//GPIOA -> ODR &= ~(1UL<<4); //DC = 0
	while(!(SPI1->SR&SPI_SR_TXE)){}; // Espera fin de la transmisión
  while(SPI1->SR&SPI_SR_BSY); // Espera puerto disponible
}		

//ESCRIBIR LETRA EN 3 X 5

void escribir3x5(int n1){
	int num = (n1-32)*3;
	int num2 = num+3;
	for(int x = num; x<num2; x++){
		send_data_nokia(Lcd3x5[x]);
	}
	send_data_nokia(0X0);
}

//ESCRIBIR LETRA EN 5 X 7

void escribir5x7(int n1){
	int num = (n1-32)*5;
	int num2 = num+5;
	for(int x = num; x<num2; x++){
		send_data_nokia(Lcd5x7[x]);
	}
	send_data_nokia(0X0);
}

//ESCRIBIR LETRA EN 6 X 8

void escribir6x8(int n1){
	int num = (n1-32)*6;
	int num2 = num+6;
	for(int x = num; x<num2; x++){
		send_data_nokia(Terminal6x8[x]);
	}
	send_data_nokia(0X0);
}
void confi_Nokia(void){
	GPIOA->MODER|=(2UL<<GPIO_MODER_MODER5_Pos); // Pin PA5 modo alternativo
	GPIOA->MODER|=(2UL<<GPIO_MODER_MODER6_Pos); // Pin PA6 modo alternativo
	GPIOA->MODER|=(2UL<<GPIO_MODER_MODER7_Pos); // Pin PA7 modo alternativo
	GPIOA->MODER|= 0X105; //SALIDA PARA DC, RST, CE 0000 0001 0000 0101
	GPIOA -> ODR |= (1UL<<4); //DC = 1
	GPIOA -> ODR |= (1UL<<1); //RST = 1
	GPIOA -> ODR |= (1UL<<0); //CE = 1
	
	GPIOA->AFR[0]|=(5UL<<GPIO_AFRL_AFSEL5_Pos); // Función alternativa 5 en pin PA5
	GPIOA->AFR[0]|=(5UL<<GPIO_AFRL_AFSEL6_Pos); // Función alternativa 5 en pin PA6
	GPIOA->AFR[0]|=(5UL<<GPIO_AFRL_AFSEL7_Pos); // Función alternativa 5 en pin PA7
	RCC->APB2ENR|=RCC_APB2ENR_SPI1EN; // Activación del SPI1 en APB2
	SPI1->CR2=0; // Datos en 8 bits
	SPI1->CR1=0;
	SPI1->CR1|=(1UL<<SPI_CR1_BR_Pos); // Asignación de velocidad de 4M bps
	SPI1->CR2|=SPI_CR2_SSOE; // Salidas activas
	SPI1->CR1|=SPI_CR1_MSTR; // Activación como maestro
	SPI1->CR1|=SPI_CR1_SPE; // Encendido del modulo
	
	Delay(2);
  GPIOA -> ODR &= ~(1UL<<1); //RST = 0
	Delay(20);
	GPIOA -> ODR |= (1UL<<1); //RST = 1
	//Comandos iniciar pantalla	
	send_comand_nokia(0x21);
	send_comand_nokia(0xB9); //CONTRASTE
	send_comand_nokia(0x04);
	send_comand_nokia(0x14);
	send_comand_nokia(0x20); //0X20
	send_comand_nokia(0x0C);

//	for(int x=0;x<504;x++){
//		send_data_nokia(Imagen[x]);
//	}

}

#endif